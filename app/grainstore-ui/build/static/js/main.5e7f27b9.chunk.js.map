{"version":3,"sources":["config.js","containers/Home.js","containers/NotFound.js","libs/contextLib.js","containers/Login.js","libs/errorLib.js","containers/Results.js","containers/Data.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["cognito","REGION","USER_POOL_ID","APP_CLIENT_ID","apiGateway","URL","app","VERSION","Home","className","NotFound","AppContext","createContext","useAppContext","useContext","Login","userHasAuthenticated","useState","username","setUsername","password","setPassword","history","useHistory","event","a","preventDefault","Auth","signIn","push","alert","message","onSubmit","FormGroup","controlId","FormLabel","FormControl","autoFocus","type","value","onChange","e","target","Button","block","disabled","length","onError","error","toString","Error","Results","customerId","useParams","records","setRecords","isAuthenticated","isLoading","setIsLoading","loadMoreItems","console","log","fetchNextBatch","nextBatch","renderRecordsList","currentAuthenticatedUser","user","token","signInUserSession","accessToken","jwtToken","payload","body","NextRecord","Account","Timestamp","headers","API","post","return_data","Count","concat","Items","map","record","i","key","UUID","to","pathname","state","recordData","ListGroup","ListGroupItem","action","TicketID","split","substring","VehicleReg","nextRecordAccount","nextRecordTimestamp","variant","size","onClick","goBack","useEffect","loadRecord","fetchedData","onLoad","summary","toUpperCase","Jumbotron","renderRecords","Data","useLocation","url","setUrl","generatePreSignedUrl","signedUrl","Badge","iso_timestamp","Date","toLocaleTimeString","Table","striped","bordered","hover","toLocaleDateString","Image","src","rounded","fluid","renderData","Routes","exact","path","App","isAuthenticating","setIsAuthenticating","setCustomerId","currentSession","signOut","Navbar","collapseOnSelect","Brand","Toggle","Collapse","Nav","NavItem","placeholder","aria-label","Provider","id","class","config","Boolean","window","location","hostname","match","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","IDENTITY_POOL_ID","userPoolWebClientId","endpoints","name","endpoint","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5e7f27b9.chunk.js","sourcesContent":["export default {\n    cognito: {\n      REGION: \"eu-west-2\",\n      USER_POOL_ID: \"eu-west-2_9E8x3OLUG\",\n      APP_CLIENT_ID: \"34q2kn7hddiru0njfkevden2hr\"\n    },\n    apiGateway: {\n      REGION: \"eu-west-2\",\n      URL: \"https://aojuwiinsb.execute-api.eu-west-2.amazonaws.com/dev\"\n    },\n    app: {\n      VERSION: \"0.1.0\"\n    }\n  };","import React from \"react\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  return (\n    <div className=\"Home\">\n      <div className=\"lander\">\n        <h1>Grainstore UI</h1>\n        <p>A simple UI for querying Grainstore Data</p>\n      </div>\n    </div>\n  );\n}","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}","import React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const { userHasAuthenticated } = useAppContext();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    try {\n      await Auth.signIn(username, password);\n      userHasAuthenticated(true);\n    //   Redirect to  home page on login\n      history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"username\">\n          <FormLabel>Username</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"username\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block disabled={!validateForm()} type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n}","export function onError(error) {\n    let message = error.toString();\n  \n    // Auth errors\n    if (!(error instanceof Error) && error.message) {\n      message = error.message;\n    }\n  \n    alert(message);\n  }","import React, { useState, useEffect } from \"react\";\nimport \"./Results.css\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useParams } from \"react-router-dom\";\nimport { API, Auth } from \"aws-amplify\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Jumbotron, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport { onError } from \"../libs/errorLib\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function Results() {\n    const { customerId } = useParams();\n    const [records, setRecords] = useState([]);\n    const { isAuthenticated } = useAppContext();\n    const [isLoading, setIsLoading] = useState(true);\n    const history = useHistory();\n    useEffect(() => {\n        async function loadRecord() {\n            const user = await Auth.currentAuthenticatedUser();\n            const token = user.signInUserSession.accessToken.jwtToken;\n            // TODO If we have Nextrecord values - add them to the request body\n            const payload = {\n                body: {\n                    \"Account\": customerId\n                },\n                headers: {\n                    \"Authorization\": token,\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n            // console.log(token)\n            return API.post(\"grainstore-api\", \"/getrecord\", payload);\n        }\n\n        async function onLoad() {\n            try {\n            const fetchedData = await loadRecord();\n            setRecords(fetchedData);\n            setIsLoading(false);\n            } catch (e) {\n            onError(e);\n            }\n        }\n\n        onLoad();\n        }, [customerId]);\n\n    \n    async function loadMoreItems() {\n        console.log('loading more records');\n\n        try {\n        const nextBatch = await fetchNextBatch();\n        setRecords(nextBatch);\n        setIsLoading(false);\n        renderRecordsList(records);\n        } catch (e) {\n        onError(e);\n        }\n    }\n\n    async function fetchNextBatch() {\n        console.log('loading more records');\n        const user = await Auth.currentAuthenticatedUser();\n        const token = user.signInUserSession.accessToken.jwtToken;\n        // TODO If we have Nextrecord values - add them to the request body\n        const payload = {\n            body: {\n                \"Account\": customerId,\n                \"LastEvaluatedKey\":{\n                    \"Account\": records.NextRecord.Account,\n                    \"Timestamp\": records.NextRecord.Timestamp\n                }\n            },\n            headers: {\n                \"Authorization\": token,\n                \"Content-Type\": \"application/json\"\n            }\n        }\n        // console.log(token)\n        return API.post(\"grainstore-api\", \"/getrecord\", payload);\n    }\n\n    function renderRecordsList(records) {\n        console.log('rendering');\n        var return_data = \"\"\n        if (records.Count > 0) { \n            console.log(\"records found\");\n            return_data = [{}].concat(records.Items).map((record, i) =>\n                i !== 0 ? (\n                    <LinkContainer key={record.UUID} to={{\n                    pathname: `/results/${customerId}/${record.UUID}`,\n                    state: {\n                        recordData: record\n                    }\n                    }}>\n                    <ListGroup>\n                        <ListGroupItem action=\"true\">\n                        <h3>TicketID: {record.TicketID}</h3>\n                        <b>Date:</b> {record.Timestamp.split('T', 1, 0)} <b>Time:</b> {record.Timestamp.substring(11,19)}\n                        <br />  \n                        <b>Vehicle Reg</b> {record.VehicleReg}\n                        </ListGroupItem>  \n                    </ListGroup>\n                </LinkContainer>\n                ):(\n                    <LinkContainer key={customerId} to={`/results/${customerId}`}>\n                        <ListGroupItem>\n                        <h4>\n                            <b>Click Ticket Below For Details:</b>\n                        </h4>\n                        </ListGroupItem>\n                    </LinkContainer>\n                )\n                );\n        }\n        if (typeof records.NextRecord !== 'undefined') {\n            const nextRecordAccount = records.NextRecord.Account;\n            const nextRecordTimestamp = records.NextRecord.Timestamp;\n            console.log('there is more. next record --> Account: ' + nextRecordAccount + ' Timestamp: ' + nextRecordTimestamp);\n            return_data.push(<Button variant=\"primary\" key=\"paginator\" size=\"lg\" block onClick={loadMoreItems}>Show more Records</Button>); \n            \n        }\n        return_data.push(<Button variant=\"primary\" key=\"goback\" size=\"lg\" block onClick={history.goBack}>Go Back</Button>);\n        return return_data;\n    }\n\n    function renderLander() {\n    return (\n        <div className=\"lander\">\n        <h1>Grainstore UI</h1>\n        <p>You must login first</p>\n        </div>\n    );\n    }\n\n    function renderRecords() {\n        var summary = \"Searching for records...\"\n        if (typeof records.Count === 'undefined') {\n            console.log('No records yet')\n        } else if (records.Count === 0) {\n            summary = 'No Records Found'\n        }\n        else {\n            summary = \"Account: \" + customerId.toUpperCase()\n        }\n        \n        \n        return (\n            <div className=\"records\">\n            <Jumbotron><h2>{summary}</h2></Jumbotron>\n            <ListGroup>\n                {!isLoading && renderRecordsList(records)}\n            </ListGroup>\n            </div>\n        );\n    }\n    return (\n    <div className=\"Home\">\n        {isAuthenticated ? renderRecords() : renderLander()}\n    </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./Results.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { Table, Image, Badge } from \"react-bootstrap\";\nimport { API, Auth } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { useAppContext } from \"../libs/contextLib\";\n\nexport default function Data() {\n    const location = useLocation();\n    const record = location.state.recordData;\n    const [url, setUrl] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { isAuthenticated } = useAppContext();\n\n    useEffect(() => {\n        async function generatePreSignedUrl() {\n            const user = await Auth.currentAuthenticatedUser();\n            const token = user.signInUserSession.accessToken.jwtToken;\n            const payload = {\n                body: {\n                    \"UUID\": record['UUID'],\n                    \"ImageKey\": record['ImageKey']\n                },\n                headers: {\n                    \"Authorization\": token,\n                    \"Content-Type\": \"application/json\"\n                }\n            };\n            console.log('Fetching signed URL for Image');\n            return API.post(\"grainstore-api\", \"/publishimage\", payload);\n        }\n\n        async function onLoad() {\n            try {\n            const signedUrl = await generatePreSignedUrl();\n            setUrl(signedUrl);\n            setIsLoading(false);\n            } catch (e) {\n            onError(e);\n            }\n        }\n        onLoad();\n        }, [record]);\n\n    function renderLander() {\n        return (\n            <div className=\"lander\">\n            <h1>Grainstore UI</h1>\n            <p>You must login first</p>\n            </div>\n        );\n    }\n\n    function renderData() {\n        // Convert Timestamp string back into Date format\n        const iso_timestamp = new Date(record['Timestamp']);\n        console.log(iso_timestamp.toLocaleTimeString());\n        return ( \n            // TODO Add a back to search results page link here\n            <Table striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                    <th>Key</th>\n                    <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Record Datetime</td>\n                        <td>{iso_timestamp.toLocaleDateString()}  -  {iso_timestamp.toLocaleTimeString()}</td>\n                    </tr>\n                    <tr>\n                        <td>Crop</td>\n                        <td>{record['Crop']}</td>\n                    </tr>\n                    <tr>\n                        <td>Direction</td>\n                        <td>{record['Direction']}</td>\n                    </tr>\n                    <tr>\n                        <td>Vehicel Reg</td>\n                        <td>{record['VehicleReg']}</td>\n                    </tr>\n                    <tr>\n                        <td>Admix</td>\n                        <td>{record['AdmixPct']} %</td>\n                    </tr>\n                    <tr>\n                        <td>Bushel Weight</td>\n                        <td>{record['BushelKg']} Kg</td>\n                    </tr>\n                    <tr>\n                        <td>Dry Weight </td>\n                        <td>{record['DryWeightTonnes']} tonnes</td>\n                    </tr>\n                    <tr>\n                        <td>Moisture</td>\n                        <td>{record['MoisturePct']} %</td>\n                    </tr>\n                    <tr>\n                        <td>Wet Weight</td>\n                        <td>{record['WetWeightTonnes']} tonnes</td>\n                    </tr>\n                    <tr>\n                        <td>Sample Bag</td>\n                        <td>\n                            <Image src={url} rounded fluid />\n                        </td>\n                    </tr>\n                </tbody>\n            </ Table>\n\n        );\n    };\n\n    return (\n        <div className=\"Data\">\n\n            <h1><Badge variant=\"primary\">Account:</Badge><Badge variant=\"light\">{record['Account']}</Badge></h1> \n            <h1><Badge variant=\"secondary\">TicketID:</Badge><Badge variant=\"light\">{record['TicketID']}</Badge></h1>\n             {isAuthenticated ? !isLoading && renderData() : renderLander()}\n        </div>\n    );\n}","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport NotFound from \"./containers/NotFound\";\nimport Login from \"./containers/Login\";\nimport Results from \"./containers/Results\";\nimport Data from \"./containers/Data\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      {/* Home page */}\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      {/* Login Page */}\n      <Route exact path=\"/login\">\n        <Login />\n      </Route>\n      {/* Search Results Page takes the customer id to search for*/}\n      <Route exact path=\"/results/:customerId\">\n        <Results />\n      </Route>\n      <Route exact path=\"/results/:customerId/:record\">\n        <Data />\n      </Route>\n      {/* Finally, catch all unmatched routes */}\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Navbar, Nav, NavItem } from \"react-bootstrap\";\nimport \"./App.css\";\nimport \"./footer.css\";\nimport config from './config';\nimport Routes from \"./Routes\";\n// Is this really needed? relates to issue with navbar\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport { AppContext } from \"./libs/contextLib\";\nimport { Auth } from \"aws-amplify\";\n\n\nfunction App() {\n\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n  const history = useHistory();\n  const [customerId, setCustomerId ] = useState(\"\");\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n  \n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push(\"/login\");\n  }\n\n  const searchChange = ({target}) => {\n    setCustomerId(target.value);\n  }\n\n  const doSearch = () => {\n    history.push('/results/' + customerId)\n  }\n\n  return (\n    !isAuthenticating &&\n    <div className=\"App container\">\n      <Navbar collapseOnSelect>\n        <Navbar.Brand>\n          <h1><Link to=\"/\">Grainstore UI</Link></h1>\n        </Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse>\n          <Nav>\n            {isAuthenticated\n              ? <NavItem onClick={handleLogout}>Logout</NavItem>\n              : <>\n                  <LinkContainer to=\"/login\">\n                    <NavItem>Login</NavItem>\n                  </LinkContainer>\n                </>\n            }\n          </Nav>\n        </Navbar.Collapse>\n        <Nav>\n          {isAuthenticated\n            ? <NavItem>\n              <form className=\"form-inline\" onSubmit={doSearch}>\n                <input  className=\"form-control mr-sm-2\" \n                        type=\"search\" \n                        placeholder=\"Enter CustomerId\" \n                        aria-label=\"Enter CustomerId\"\n                        value={customerId}\n                        onChange={searchChange}\n                        >\n                </input>\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n              </form>\n            </NavItem>\n            : <>\n              </>\n          }\n        </Nav>\n      </Navbar>\n      <AppContext.Provider\n        value={{ isAuthenticated, userHasAuthenticated }}\n      >\n        <Routes />\n      </AppContext.Provider>\n      <footer id=\"sticky-footer\">\n        <div class=\"container text-center\">\n          <small>Grainstore UI Version: {config.app.VERSION}</small>\n        </div>\n      </footer>\n    </div>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Amplify } from 'aws-amplify';\nimport config from './config';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"grainstore-api\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}